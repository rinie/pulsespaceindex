KAKU
* Encoding volgens Princeton PT2262 / MOSDESIGN M3EB / Domia Lite spec.
* Pulse (T) is 350us PWDM
* 0 = T,3T,T,3T, 1 = T,3T,3T,T, short 0 = T,3T,T,T
0 = 0101 5 1
1 = 0110 6 2
F = 0100 4 0
Kaku;ID=43;SWITCH=3;CMD=OFF
Kaku('C', 3, false)
Off, On, AllOn

 330, 990, 6990
01010110010101010101011001010101010101100110010102
0101 0110 0101 0101 0101 0110 0101 0101 0101 0110 0110 0101 02
   0    1    0    0    0    1    0    0    0    1    1    0
C=2, 3=2, Off=6
0100 0100 0110
44 6
x446 02
x447 02

Kaku;ID=42;SWITCH=3;CMD=ON
330, 990, 6990
011001010101010101010110010101010101011001100110 02
0110 0101 0101 0101 0101 0110 0101 0101 0101 0110 0110 0110 02
10 01 01 01 01 10 01 01 01 10 10 10 02
1 0 0 0 0 1 0 0 0 1 1 1 02
10000100 0111
84 7

2020-04-26 18:45:07.014 RFLink: 20;33;DEBUG;Pulses=50;Pulses(uSec)=390,960,300,960,300,990,1020,300,300,960,300,960,300,990,270,960,300,990,300,960,300,960,1050,300,300,990,300,960,300,960,300,960,300,960,300,960,300,960,1050,300,300,990,1020,300,300,960,300,960,300,6990;
2020-04-26 18:45:07.108 RFLink: 20;34;DEBUG;Pulses=50;Pulses(uSec)=390,960,300,960,300,960,1050,270,300,960,300,960,300,990,270,960,300,990,300,960,300,960,1050,300,300,990,300,960,300,960,360,930,300,960,300,960,300,960,1050,300,300,990,1050,300,300,960,300,960,300,6990;
2020-04-26 18:45:07.202 RFLink: 20;35;DEBUG;Pulses=50;Pulses(uSec)=390,960,300,960,300,960,1050,300,300,960,300,960,300,990,270,960,300,990,300,960,300,960,1050,300,300,990,300,960,300,960,300,990,300,960,300,960,300,960,1050,300,300,990,1050,300,300,960,300,960,300,6990;
2020-04-26 18:45:07.297 RFLink: 20;36;DEBUG;Pulses=50;Pulses(uSec)=390,960,300,960,300,960,1020,300,300,960,300,960,300,990,270,960,300,990,390,960,300,960,1050,300,300,990,330,960,300,960,300,1020,300,960,300,960,300,960,1050,300,300,990,1050,300,300,960,300,960,300,6990;
2020-04-26 18:45:07.391 RFLink: 20;37;DEBUG;Pulses=50;Pulses(uSec)=390,960,300,960,300,960,1050,300,300,960,300,960,300,990,270,960,300,990,330,930,300,960,1050,300,300,990,300,960,300,960,300,960,300,960,300,960,300,960,1050,300,300,990,1050,300,300,960,300,960,300,6990;
2020-04-26 18:45:07.485 RFLink: 20;38;DEBUG;Pulses=50;Pulses(uSec)=390,960,300,960,300,960,1050,300,300,960,300,960,300,990,270,960,300,990,300,960,300,960,1050,300,300,990,300,960,300,960,300,960,300,960,300,960,300,960,1050,300,300,990,1050,300,300,960,300,960,300,6990;
2020-04-26 18:45:07.579 RFLink: 20;39;DEBUG;Pulses=50;Pulses(uSec)=390,960,360,960,300,960,1020,300,300,960,300,960,300,990,270,960,300,990,300,960,300,960,1050,300,300,990,300,960,300,960,300,960,300,960,300,960,300,960,1050,300,300,990,1020,300,300,960,300,960,300,6990;
2020-04-26 18:45:12.252 Error: Wunderground: Error getting http data! (Check API key!)
2020-04-26 18:45:15.418 (Smart Meter) P1 Smart Meter (Power)
2020-04-26 18:45:15.424 (Smart Meter) Usage (Usage L1)
2020-04-26 18:45:15.429 (Smart Meter) Usage (Delivery L1)
2020-04-26 18:45:25.293 (Smart Meter) P1 Smart Meter (Power)
2020-04-26 18:45:25.299 (Smart Meter) Usage (Usage L1)
2020-04-26 18:45:25.303 (Smart Meter) Usage (Delivery L1)
2020-04-26 18:45:33.903 RFLink: 20;3A;PONG;
2020-04-26 18:45:35.199 (Smart Meter) P1 Smart Meter (Power)
2020-04-26 18:45:35.205 (Smart Meter) Usage (Usage L1)
2020-04-26 18:45:35.210 (Smart Meter) Usage (Delivery L1)
2020-04-26 18:45:36.986 RFLink: 20;3B;DEBUG;Pulses=92;Pulses(uSec)=480,1860,390,870,390,870,390,870,390,840,390,870,390,840,390,870,390,840,390,870,390,1860,390,1860,390,870,390,870,390,870,390,1860,390,870,390,870,390,1860,390,1860,390,1860,390,1860,390,870,390,870,390,1860,390,870,390,870,390,840,390,840,390,1860,390,3810,390,1860,390,1860,390,1860,390,840,390,870,390,840,390,1860,390,870,390,870,390,870,390,840,390,870,390,870,390,840,390,600;
2020-04-26 18:45:37.031 RFLink: 20;3C;DEBUG;Pulses=30;Pulses(uSec)=420,810,360,810,360,810,360,810,360,810,360,1860,390,1860,390,840,390,840,390,840,390,1860,390,840,390,870,390,1860,390,210;
2020-04-26 18:45:37.310 RFLink: 20;3D;DEBUG;Pulses=168;Pulses(uSec)=420,1770,360,3630,360,1740,360,1860,390,1860,390,870,390,870,390,840,390,1860,390,870,390,870,390,840,390,870,390,840,390,840,390,840,390,870,390,870,390,1860,390,1860,390,840,390,870,390,840,390,1860,390,840,390,840,390,1860,390,1860,390,1860,390,1860,390,870,390,870,390,1860,390,870,390,840,390,870,390,840,390,1860,390,3810,390,1860,390,1860,390,1860,390,870,390,840,390,840,390,1860,390,870,390,870,390,840,390,870,390,840,390,870,390,840,390,870,390,870,390,1860,390,1860,390,870,390,870,390,840,390,1860,390,840,390,870,390,1860,390,1860,390,1860,390,1860,390,840,390,870,390,1860,390,870,390,840,390,870,390,870,390,1860,390,3810,390,1860,390,1860,390,1860,390,870,390,840,390,870,390,1860,390,300;
2020-04-26 18:45:37.380 RFLink: 20;3E;DEBUG;Pulses=44;Pulses(uSec)=450,1740,360,1860,390,1860,390,840,390,840,390,840,390,1860,390,870,390,870,390,840,390,870,390,840,390,840,390,870,390,870,390,870,390,1860,390,1860,390,870,390,840,390,870,390,930;
2020-04-26 18:45:37.473 RFLink: 20;3F;DEBUG;Pulses=36;Pulses(uSec)=480,840,390,840,390,1860,390,840,390,870,390,1860,390,1860,390,1860,390,1860,390,870,390,840,390,1860,390,870,390,870,390,840,390,840,390,1860,390,3390;
2020-04-26 18:45:45.104 (Smart Meter) P1 Smart Meter (Power)
2020-04-26 18:45:45.110 (Smart Meter) Usage (Usage L1)
2020-04-26 18:45:45.115 (Smart Meter) Usage (Delivery L1)

 psi   micros: [ 240, 330, 990, 6990 ],
  psi   counts: [
  psi     { i: 0, t: 240, ct: [ 20, 0, 20 ], p: 0 },
  psi     { i: 1, t: 330, ct: [ 1, 4, 5 ], s: 0, mergeToIx: [ 0, -1 ] },
  psi     { i: 2, t: 990, ct: [ 4, 20, 24 ], p: 1, s: 1 },
  psi     { i: 3, t: 6990, ct: [ 0, 1, 1 ] }
  psi   ],
  psi   psi: '12210202020202020202022102020202020202210221020203',
  psi   pi: '1200000000020000000202000',
  psi   si: '2122222222212222222121223'
  psi } +3ms
  psiv Rflink Domoticzlog  2020-04-26 09:23:00.220 RFLink: 20;C8;Kaku;ID=42;SWITCH=3;CMD=OFF; +13ms

12210202020202020202022102020202020202210221020203
01100101010101010101011001010101010101100110010102
0110 0101 0101 0101 0101 0110 0101 0101 0101 0110 0110 0101 02
10 01 01 01 01 10 01 01 01 10 10 01 02
1000 0100 0110 02
84 6

 int cmd = 0x600 | ((device - 1) << 4) | ((addr - 1) & 0xF);
    if (on)
        cmd |= 0x800;
010101010101010101010110010101010101011001100110 02
0101 0101 0101 0101 0101 0110 0101 0101 0101 0110 0110 0110 02
01 01 01 01 01 10 01 01 01 10 10 10 02
0000 0100 0111 02
047
A     3    

 psi PulseSpaceIndex {
  psi   signalType: 'rflink:109',
  psi   frameCount: 1,
  psi   count: 50,
  psi   micros: [ 330, 990, 6990 ],
  psi   counts: [
  psi     { i: 0, t: 330, ct: [ 21, 4, 25 ], p: 0, s: 0 },
  psi     { i: 1, t: 990, ct: [ 4, 20, 24 ], p: 1, s: 1 },
  psi     { i: 2, t: 6990, ct: [ 0, 1, 1 ] }
  psi   ],
  psi   psi: '01010101010101010101011001010101010101100110011002',
  psi   pi: '0000000000010000000101010',
  psi   si: '1111111111101111111010102'
  psi } +2ms
  psim microsToPsi  rflink:2020-04-26 10:35:31.252 RFLink: 20;77;DEBUG;Pulses=50;Pulses(uSec)=330,960,240,960,240,960,240,960,240,960,240,960,240,960,240,960,240,960,240,960,240,960,990,300,240,960,240,960,240,960,240,960,240,960,240,960,240,960,990,300,240,960,990,300,240,960,240,960,240,6990; +2ms
  psi PulseSpaceIndex {
  psi   signalType: 'rflink:110',
  psi   frameCount: 1,
  psi   count: 50,
  psi   micros: [ 240, 330, 990, 6990 ],
  psi   counts: [
  psi     { i: 0, t: 240, ct: [ 21, 0, 21 ], p: 0 },
  psi     { i: 1, t: 330, ct: [ 1, 3, 4 ], mergeToIx: [ 0, 2 ] },
  psi     { i: 2, t: 990, ct: [ 3, 21, 24 ], s: 0 },
  psi     { i: 3, t: 6990, ct: [ 0, 1, 1 ] }
  psi   ],
  psi   psi: '12020202020202020202022102020202020202210221020203',
  psi   pi: '1000000000020000000202000',
  psi   si: '2222222222212222222121223'
  psi } +6ms
  psiv Rflink Domoticzlog  2020-04-26 10:35:31.257 RFLink: 20;78;Kaku;ID=41;SWITCH=3;CMD=OFF; +12ms        
  
  
  
01010101 01010101 01010110 01010101 01010110 01100110
55 55 56 55 56 66 2


broadlink onPayloadReceived Payload <Buffer 04 00 00 00 b2 21 34 00 0d 23 0c 23 0c 23 24 0d 0c 23 0c 23 0c 23 0c 23 0c 23 0d 23 0c 23 24 0d 0c 23 0c 23 0c 23 0c 23 0c 23 0c 23 0c 23 24 0d 0c 23 ... 14 more bytes> +444ms
                      Send Payload1 <Buffer 02 00 00 00 b2 06 34 00 0b 21 0b 21 0b 21 21 0b 0b 21 0b 21 0b 21 0b 21 0b 21 0b 21 0b 21 21 0b 0b 21 0b 21 0b 21 0b 21 0b 21 0b 21 0b 21 21 0b 0b 21 ... 10 more bytes>
Send Payload {
  signalType: 'ook433',
  repeat: 6,
  count: 52,
  ticks: [ 11, 33, 336 ],
  counts: [ 25, 24, 1 ],
  micros: [ 335, 1005, 10232 ],
  psi: '01010110010101010101011001010101010101100110011002'
}

Send Payload2 04000000b21634000c240c240c24230e0c240c240c230c240c240c240b24230e0c240c240c230c240c240c230c23230e0c24230e0c24240d0b00016800000000
Send Payload2 02000000b20634000b210b210b21210b0b210b210b210b210b210b210b21210b0b210b210b210b210b210b210b21210b0b21210b0b21210b0b000150

01010110010101010101011001010101010101100110011002
01010110010101010101011001010101010101100110011002

sendPsi ook433 6 [ 350, 1050, 10850 ] x565556555665 02
Send Payload1 <Buffer 02 00 00 00 b2 06 34 00 0b 22 0b 22 0b 22 22 0b 0b 22 0b 22 0b 22 0b 22 0b 22 0b 22 0b 22 22 0b 0b 22 0b 22 0b 22 0b 22 0b 22 0b 22 0b 22 22 0b 0b 22 ... 14 more bytes>
Send Payload2 02000000b20634000b220b220b22220b0b220b220b220b220b220b220b22220b0b220b220b220b220b220b220b22220b0b22220b0b220b220b00016400000000
Send Payload {
  signalType: 'ook433',
  repeat: 6,
  count: 52,
  ticks: [ 11, 34, 356 ],
  counts: [ 25, 24, 1 ],
  micros: [ 335, 1035, 10841 ],
  psi: '01010110010101010101011001010101010101100110010102'
}

Send Payload2 02000000b20634000b220b220b22220b0b220b220b220b220b220b220b22220b0b220b220b220b220b220b220b22220b0b22220b0b220b220b00016400000000
Send Payload2 02000000b20634000b210b210b21210b0b210b210b210b210b210b210b21210b0b210b210b210b210b210b210b21210b0b21210b0b21210b0b00015000000000
Send Payload {
  signalType: 'ook433',
  repeat: 6,
  count: 52,
  ticks: [ 11, 33, 336 ],
  counts: [ 25, 24, 1 ],
  micros: [ 335, 1005, 10232 ],
  psi: '01010110010101010101011001010101010101100110011002'
}

NewKAKU
* Encoding volgens Arduino Home Easy pagina
* Pulse (T) is 275us PDM
* 0 = T,T,T,4T, 1 = T,4T,T,T, dim = T,T,T,T op bit 27
*
* NewKAKU ondersteund:
*   on/off       ---- 000x Off/On
*   all on/off   ---- 001x AllOff/AllOn
*   dim absolute xxxx 0110 Dim16        // dim op bit 27 + 4 extra bits voor dim level

* 0 = T,T,T,4T, 1 = T,4T,T,T, dim = T,T,T,T op bit 27

Pulse always 0

0 t 4t 01 + 1 & 3
1 4t t 10
F 2 t t  00

* Encoding volgens Princeton PT2262 / MOSDESIGN M3EB / Domia Lite spec.
* Pulse (T) is 350us PWDM
* 0 = T,3T,T,3T, 1 = T,3T,3T,T, short 0 = T,3T,T,T
0 = 01 01 5 1
1 = 01 10 6 2
F 2 = 01 00 4 0

OldKaku 01 + (x + 1) & 3 r01 yx 02
Newkaku 0 + (x + 1) & 3 r0 2yx 3

' -_'
'x'
'02x............... 03'
of 'c0-2x......3'
oldkaku 'c01,x,c-02'
r01xr-02
r of f van fixed, c constant
{}


['01', '10', '00'] fF or 2
['0101', '0110', '0100']

struct He853Timings {
	char* 		ProtocolName; // static char just to display
	uint16_t	BaseTime; // T, following Time fields are multiplied by BaseTime to form resulting times in microsecs... use 1 if you don't want mappings
	uint16_t	StartBitHighTime;
	uint16_t	StartBitLowTime;
	uint16_t	EndBitHighTime;
	uint16_t	EndBitLowTime;
	uint16_t	DataBit0HighTime;
	uint16_t	DataBit0LowTime;
	uint16_t	DataBit1HighTime;
	uint16_t	DataBit1LowTime;
	uint8_t		DataBitCount;
	uint8_t		FrameCount;
};
He853 S, E, 0, 1, count, framecount

const char cAnBan[] = "AnBan";
static struct He853Timings AnBanTimings = {
	(char *)&cAnBan,
	1, // no T
	320, 4800,
	0, 0,
	320, 960,
	960, 320,
	28,
	7
} ;

const char cUK[] = "UK";
static struct He853Timings UKTimings = {
	(char *)&cUK,
	1, // no T
	320, 9700,
	0,0,
	320, 960,
	960, 320,
	24,
	18
};

const char cEU[] = "EU";
static struct He853Timings EUTimings = {
	(char *)&cEU,
	1, // no T
	260, 8600,
	0, 0,
	260, 260,
	260, 1300,
	57,
	7
};

const char cKAKU[] = "KAKU";
static struct He853Timings KakuTimings = {
	(char *)&cKAKU,
	350, // Base Time us
	0, 0,
	1,32, 1,31?
	1, 3,
	3, 1,
	24,
	7
};

const char cKAKUNEW[] = "KAKUNEW";
static struct He853Timings KakuNewTimings = {
	(char *)&cKAKUNEW,
	275, // Base time in us
	1, 8,
	1,32,
	1, 1, // 0 = 01, Dim = 00
	1, 4, // 1 = 10
	64,
	18
};

Code - A
Button -1

S/D/T

rc5
0 = 10
1 = 01

t=889
Vishay 868 32 cycles

Nec leader 9 4.5
Nec 1 = 560, 
1, 3, 4, 8, 16

0 = 00
1 = 01

repeat 02

c0

#define MIN_RC6_SAMPLES      1
#define RC6_HDR_MARK      2666
#define RC6_HDR_SPACE      889
#define RC6_T1             444  444, [1, 2, 4]
#define RC6_RPT_LENGTH   46000
// The fourth bit we send is a "double width trailer bit"

Sync of leader/trailer
?
Data {
  signalType: 'ir',
  repeat: 0,
  count: 612,
  ticks: [ 16, 43, 54, 117, 2447, 3333, [length]: 6 ],
  counts: [ 498, 84, 6, 6, 5, 1, [length]: 6 ],
  micros: [ 487, 1310, 1644, 3563, 74520, 101502, [length]: 6 ],
  psi
}
  broadlink enterLearning +16ms
  broadlink onPayloadReceived Payload <Buffer 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00> +57ms
  broadlink checkData +2s
  broadlink onPayloadReceived Payload <Buffer 04 00 00 00 26 00 66 00 74 36 0e 0f 0d 2b 0e 0f 0d 0f 0e 0f 0d 0f 0e 0f 0d 0f 0e 0f 0d 0f 0e 0f 0e 0f 0d 0f 0e 2a 0e 0f 0d 0f 0e 0f 0e 0e 0e 0f 0e 0f ... 62 more bytes> +64ms
Send Payload2 040000002600660074360e0f0d2b0e0f0d0f0e0f0d0f0e0f0d0f0e0f0d0f0e0f0e0f0d0f0e2a0e0f0d0f0e0f0e0e0e0f0e0f0d0f0e2a0e0f0d2b0e0f0d0f0e2a0e2a0e2b0d0f0e0f0d0f0e2a0e0f0e2a0e2a0e2b0d2b0d0f0e0f0e2a0e0f0d0f0e0f0d0f0e0f0e0e0e2b0d000d050000
Data {
  signalType: 'ir',
  repeat: 0,
  count: 102,
  ticks: [ 15, 43, 54, 116, 3333, [length]: 5 ],
  counts: [ 83, 14, 1, 1, 1, [length]: 5 ],
  micros: [ 457, 1310, 1644, 3533, 101502, [length]: 5 ],
  psi: '3200010000000000000000000000010000000000000001000100000101010000000100010101010000010000000000000104'
}
  broadlink enterLearning +12ms
  broadlink onPayloadReceived Payload <Buffer 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00> +51ms
  broadlink checkData +3s
  broadlink onPayloadReceived Payload <Buffer 04 00 00 00 26 00 66 00 74 36 0e 0f 0d 2b 0e 0f 0d 0f 0e 0f 0d 0f 0e 0f 0d 0f 0e 0f 0d 0f 0e 0f 0e 0e 0e 0f 0e 2a 0e 0f 0d 0f 0e 0f 0d 0f 0e 0f 0e 0e ... 62 more bytes> +63ms
Send Payload2 040000002600660074360e0f0d2b0e0f0d0f0e0f0d0f0e0f0d0f0e0f0d0f0e0f0e0e0e0f0e2a0e0f0d0f0e0f0d0f0e0f0e0e0e0f0e2a0e0f0d2b0e0f0d0f0e2a0e2a0e2b0d0f0e0f0d0f0e2a0e0f0e2a0e2a0e2a0e2b0d0f0e0f0e2a0e0f0d0f0e0f0d0f0e0f0d0f0e2a0e000d050000
Data {
  signalType: 'ir',
  repeat: 0,
  count: 102,
  ticks: [ 15, 43, 54, 116, 3333, [length]: 5 ],
  counts: [ 83, 14, 1, 1, 1, [length]: 5 ],
  micros: [ 457, 1310, 1644, 3533, 101502, [length]: 5 ],
  psi: '3200010000000000000000000000010000000000000001000100000101010000000100010101010000010000000000000104'
}
#define PANASONIC_BITS          48
#define PANASONIC_HDR_MARK    3502
#define PANASONIC_HDR_SPACE   1750
#define PANASONIC_BIT_MARK     502
#define PANASONIC_ONE_SPACE   1244
#define PANASONIC_ZERO_SPACE   400

3200010000000000000000000000010000000000000001000100000101010000000100010101010000010000000000000104

+3533 -1644 +457 -457 +457 -1310 +457 -457 +457 -457 +457 -457 +457 -457 +457 +457 -457 +457 -457 +457 -457 +457 -457 +457 -457 +457 -457 +457 -457 +1310 -457 +457 -457 +457 -457 +457 -457 +457 -457 +457 -457 +457 -457 +457 -457 +1310 -457 +457 -457 +1310 -457 +457 -457 +457 -457 +1310 -457 +1310 -457 +1310 -457 +457 -457 +457 -457 +457 -457 +1310 -457 +457 -457 +1310 +457 -1310 +457 -1310 +457 -1310 +457 -457 +457 -457 +457 -1310 +457 -457 +457 -457 +457 -457 +457 -457 +457 -457 +457 -457 +457 -1310 +457 101502

000100000000000000000000000100000000000000010001000001010100000001000101010100000100000000000001

010000000000010000000101001110001011110010000001

32c0x40040538BC81-4
4004
0538BC8
100BCBD  


PANASONIC HT ON

  broadlink onPayloadReceived Payload <Buffer 04 00 00 00 26 00 b8 00 00 01 26 91 13 11 14 11 13 12 13 11 14 11 13 11 14 11 13 11 14 11 13 12 13 11 14 11 13 36 13 12 13 11 13 12 13 11 14 11 13 11 ... 142 more bytes> +85ms
Send Payload2 040000002600b8000001269113111411131213111411131114111311141113121311141113361312131113121311141113111411131114111312131114351435143613361336133614361336130006140001274814000c380001274814000c380001274813000c390001274813000c390001274814000c380001274814000c390001254914000c380001274814000c380001274813000c390001264913000c390001254a13000c390001264814000c380001264914000c380001274813000d05
Data {
  signalType: 'ir',
  repeat: 0,
  count: 184,
  ticks: [ 20, 54, 74, 145, 295, 1556, 3129, 3333, [length]: 8 ],
  counts: [ 70, 9, 14, 1, 15, 1, 13, 1, [length]: 8 ],
  micros: [ 609, 1644, 2254, 4416, 8984, 47386, 95289, 101502, [length]: 8 ],
  psi: '4300000000000000000000000001000000000000000000000001010101010101010542064206420642064206420642064206420642064206420642064207'
}
43000000000000000000000000010000000000000000000000010101010101010105
43c0x0800FF-5
4206

0000000000000000000000000100000000000000000000000101010101010101
00000000 00001000 00000000 11111111
bl HUMAX ON

000800FF

Send Payload2 04000000260068000001299115111610153317101510150f1611140f173316331710153317321733133617331312161115101533151215101510160f153314361633141117331534173314351500051e00012b4716000c5b0001294914000c5d0001294914000c5e0001274a13000d05
Data {
  signalType: 'ir',
  repeat: 0,
  count: 104,
  ticks: [ 23, 54, 74, 145, 299, 1310, 3166, 3333, [length]: 8 ],
  counts: [ 53, 16, 4, 1, 5, 1, 3, 1, [length]: 8 ],
  micros: [ 700, 1644, 2254, 4416, 9106, 39894, 96416, 101502, [length]: 8 ],
  psi: '430000010000000000010100010101010100000001000000000101010001010101054206420642064207'
}
  broadlink enterLearning +6ms
  broadlink onPayloadReceived Payload <Buffer 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00> +49ms
  broadlink checkData +3s
  broadlink onPayloadReceived Payload <Buffer 04 00 00 00 26 00 50 00 00 01 28 92 14 12 14 12 14 34 14 11 15 12 13 11 15 10 14 13 13 35 15 34 15 12 13 35 15 34 15 35 15 34 15 35 14 13 13 10 15 12 ... 46 more bytes> +59ms
Send Payload2 040000002600500000012892141214121434141115121311151014131335153415121335153415351534153514131310151212361510151213111412143414361534151015351534153515341500051e00012a4814000d050000000000000000

Send Payload2 04000000
26
00
5000
00012892141214121434141115121311151014131335153415121335153415351534153514131310151212361510151213111412143414361534151015351534153515341500051e00012a4814000d050000000000000000
21=0x15
54=0x36
72=0x48
146=0x92
Data {
  signalType: 'ir',
  repeat: 0,
  count: 80,
  ticks: [ 21, 54, 72, 146, 298, 1310, 3333, [length]: 7 ],
  counts: [ 50, 16, 1, 1, 2, 1, 1, [length]: 7 ],
  micros: [ 640, 1644, 2193, 4446, 9075, 39894, 101502, [length]: 7 ],
  psi: '430000010000000000010100010101010100000001000000000101010001010101054206'
}
  broadlink enterLearning +12ms
  broadlink onPayloadReceived Payload <Buffer 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00> +49ms
  
 bl LG on
 43000001000000000001010001010101010000000100000000010101000101010105
 43c0-001000001101111100010000111011115
 43c0x20DF10EF-5 LG ON
 43c0x000800FF-5 HUMAX ON

00 00 2F 00 D0 06 11 A0 08 D0 01 1A 01 1A 01 1A 03 4E 01 1A 4D A6 11 A0 04 68 01 1A BB CE 22 01 12 11 11 12 21 22 22 21 11 21 11 12 22 12 22 23 82 45
PREVIOUS
0000 006C 0022 0002 015B 00AD 0016 0016 0016 0016 0016 0041 0016 0016 0016 0016 0016 0016 0016 0016 0016 0016 0016 0041 0016 0041 0016 0016 0016 0041 0016 0041 0016 0041 0016 0041 0016 0041 0016 0016 0016 0016 0016 0016 0016 0041 0016 0016 0016 0016 0016 0016 0016 0016 0016 0041 0016 0041 0016 0041 0016 0016 0016 0041 0016 0041 0016 0041 0016 0041 0016 05F7 015B 0057 0016 0E6C

 0000010000000000010100010101010100000001000000000101010001010101
 00100000110111110001000011101111
 20DF10EF
 
   broadlink onPayloadReceived Payload <Buffer 04 00 00 00 26 00 54 00 57 1e 0e 1e 0e 0f 0e 0f 2b 2d 0e 0f 0e 0f 0e 0f 0e 0f 0e 10 0e 0f 0e 0f 0e 0f 0e 0f 0e 0f 0e 10 1c 0f 0e 1e 0e 0f 0e 00 0a bb ... 46 more bytes> +54ms
 Send Payload2 0400000026005400571e0e1e0e0f0e0f2b2d0e0f0e0f0e0f0e0f0e100e0f0e0f0e0f0e0f0e0f0e101c0f0e1e0e0f0e000abb571e0e1d0e100d102b2c0e0f0e100e0f0e0f0e0f0e0f0e100e0f0e0f0e0f0e0f1d0f0e1e0e0f0e000d0500000000
 Data {
   signalType: 'ir',
   repeat: 0,
   count: 84,
   ticks: [ 16, 30, 45, 87, 2747, 3333, [length]: 6 ],
   counts: [ 64, 8, 4, 2, 1, 1, [length]: 6 ],
   micros: [ 487, 914, 1370, 2649, 83656, 101502, [length]: 6 ],
   psi: '31010000220000000000000000000000100100043101000022000000000000000000000010010005'
 }
   broadlink enterLearning +14ms
   broadlink onPayloadReceived Payload <Buffer 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00> +59ms
   broadlink checkData +3s
   broadlink onPayloadReceived Payload <Buffer 04 00 00 00 26 00 54 00 57 1e 0e 1e 0e 0f 0e 0f 2b 2d 0e 0f 0e 0f 0e 0f 0e 0f 0e 10 0e 0f 0e 0f 0e 0f 0e 0f 0e 10 0e 0f 1c 10 0d 1e 0e 0f 0e 00 0a bb ... 46 more bytes> +452ms
 Send Payload2 0400000026005400571e0e1e0e0f0e0f2b2d0e0f0e0f0e0f0e0f0e100e0f0e0f0e0f0e0f0e100e0f1c100d1e0e0f0e000abb571e0e1d0e100e0f2b2c0e100d100e0f0e0f0e0f0e0f0e100e0f0e0f0e0f0e0f1d0f0e1e0e0f0e000d0500000000
 Data {
   signalType: 'ir',
   repeat: 0,
   count: 84,
   ticks: [ 16, 30, 45, 87, 2747, 3333, [length]: 6 ],
   counts: [ 64, 8, 4, 2, 1, 1, [length]: 6 ],
   micros: [ 487, 914, 1370, 2649, 83656, 101502, [length]: 6 ],
   psi: '31010000220000000000000000000000100100043101000022000000000000000000000010010005'
   psi: '3101000022000000000000000000000010010004
         3101000022000000000000000000000010010005'

0 space pulse
1 pulse space

00 
1 invert?

3101000022000000000000000000000010010004
31
010000
1000

0100002200000000000000000000001001000
 6t, which is 2.666ms.
 }
   broadlink enterLearning +5ms
  broadlink onPayloadReceived Payload <Buffer 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00> +50ms

Philips RC6 on

40000000000000000000000000000000004040

35 2
1 per 32

  psi PulseSpaceIndex {
  psi   signalType: 'broadlink:ook433',
  psi   frameCount: 1,
  psi   count: 886,
  psi   micros: [ 305, 1310, 2589, 9227, 45680 ],
  psi   counts: [
  psi     { i: 0, t: 305, ct: [ 443, 215, 658 ], p: 0, s: 0 },
  psi     { i: 1, t: 1310, ct: [ 0, 215, 215 ], s: 1 },
  psi     { i: 2, t: 2589, ct: [ 0, 6, 6 ] },
  psi     { i: 3, t: 9227, ct: [ 0, 6, 6 ] },
  psi     { i: 4, t: 45680, ct: [ 0, 1, 1 ] }
  psi   ],
  psi   l01t: '--00-1-4',
  
Repeated signals broadlink:
4 is BL timeout
3 is inter packages space.
